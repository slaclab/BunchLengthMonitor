###################################################################################################
# Summary:             Public API/PV Interface to BLEN (LCLS-II Configuration)
# Author:              Ryan Reno <rreno@slac.stanford.edu>
#                        Adapted from work by Chris Ford <caf@> and Marcio Paduan <marcio@>
# Date:                05-May-2020
###################################################################################################
###################################################################################################
# Macros:
#   P:        The PV name as BLEN:(AREA):(POS)
#   P0/1:     The PV name as BLEN:(AREA):(POS):(INST)A/B
#   SCAN:     Scan rate for PVs. Should keep below 1Hz, 2Hz max rate
###################################################################################################


# --------------------------------------------------------------------------------------------------
#
# Filters and Shutters (Pyrodetector Configuration Only)
#
# --------------------------------------------------------------------------------------------------

# Status Values Filters:
# 0 = OUT
# 1 = IN
# 2 = MOVING
# 3 = INCONSISTENT  - Due to both limit switches being activated at the same time.

# Status Values Shutters:
# 0 = IN
# 1 = OUT
# 2 = MOVING
# 3 = INCONSISTENT  - Due to both limit switches being activated at the same time.


#Shutter motor/solenoide was changed thus these are oposit to filters
record(calc, "$(P):LIMSW0")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x1")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW1")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x2")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW2")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x4")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW3")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x8")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW4")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x10")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW5")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x20")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW6")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x40")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW7")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x80")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW8")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x100")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW9")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x200")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW10")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x400")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):LIMSW11")
{
  field(INPA, "$(P):StatusLimitSw")
  field(INPB, "0x800")  # Bit Mask
  field(INPC, "0")    # Bit Shift 
  field(CALC, "A&B >> C")
  field(SCAN, "1 second")
  field(PHAS, "0")
  field(DESC, "0=Inserted, 1=Removed")
}

record(calc, "$(P):0:SHT_STS")
{
  field(INPA, "$(P):LIMSW0")
  field(INPB, "$(P):LIMSW6") 
  field(CALC, "A&&B ? 3 : !(A&&B) ? 2 : B")
  field(SCAN, "1 second")
  field(DESC, "0=IN, 1=OUT, 2=MOVING, 3=INCONSISTENT")
}

record(calc, "$(P):1:SHT_STS")
{
  field(INPA, "$(P):LIMSW1")
  field(INPB, "$(P):LIMSW7") 
  field(CALC, "A&&B ? 3 : !(A&&B) ? 2 : B")
  field(SCAN, "1 second")
  field(DESC, "0=IN, 1=OUT, 2=MOVING, 3=INCONSISTENT")
}

#
# (P):FLTX_STS  -- status of Filter X
#

record(calc, "$(P):FLT1_STS")
{
  field(INPA, "$(P):LIMSW2")
  field(INPB, "$(P):LIMSW8") 
  field(CALC, "A&&B ? 3 : !(A&&B) ? 2 : A")
  field(SCAN, "1 second")
  field(DESC, "0=IN, 1=OUT, 2=MOVING, 3=INCONSISTENT")
}

record(calc, "$(P):FLT2_STS")
{
  field(INPA, "$(P):LIMSW3")
  field(INPB, "$(P):LIMSW9") 
  field(CALC, "A&&B ? 3 : !(A&&B) ? 2 : A")
  field(SCAN, "1 second")
  field(DESC, "0=IN, 1=OUT, 2=MOVING, 3=INCONSISTENT")
}
record(calc, "$(P):FLT3_STS")
{
  field(INPA, "$(P):LIMSW4")
  field(INPB, "$(P):LIMSW10") 
  field(CALC, "A&&B ? 3 : !(A&&B) ? 2 : A")
  field(SCAN, "1 second")
  field(DESC, "0=IN, 1=OUT, 2=MOVING, 3=INCONSISTENT")
}

record(calc, "$(P):FLT4_STS")
{
  field(INPA, "$(P):LIMSW5")
  field(INPB, "$(P):LIMSW11") 
  field(CALC, "A&&B ? 3 : !(A&&B) ? 2 : A")
  field(SCAN, "1 second")
  field(DESC, "0=IN, 1=OUT, 2=MOVING, 3=INCONSISTENT")
}

#
# Error (ERR) Values:
#   0 = OK
#   1 = Mismatch of CTRL and STS
#

#
# (PX):SHT_ERR -- AMCX Shutter Error State
#

record(calc, "$(P):0:SHT_ERR")
{
  field(INPA, "$(P):0:SHT_STS")
  field(INPB, "$(P):0:SHT_CTRL")
  field(INPC, "0")    # OK Value
  field(INPD, "1")    # Error Value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "1 second")
  field(PHAS, "1")
  field(DESC, "0 = OK 1 = Mismatch of STS and CTRL")
}

record(calc, "$(P):1:SHT_ERR")
{
  field(INPA, "$(P):1:SHT_STS")
  field(INPB, "$(P):1:SHT_CTRL")
  field(INPC, "0")    # OK Value
  field(INPD, "1")    # Error Value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "1 second")
  field(PHAS, "1")
  field(DESC, "0 = OK 1 = Mismatch of STS and CTRL")
}

#
# (P):FLTX_ERR -- FilterX Error State
#

record(calc, "$(P):FLT1_ERR")
{
  field(INPA, "$(P):FLT1_STS")
  field(INPB, "$(P):FLT1_CTRL")
  field(INPC, "0")    # OK Value
  field(INPD, "1")    # Error Value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "1 second")
  field(PHAS, "1")
  field(DESC, "0 = OK 1 = Mismatch of STS and CTRL")
}

record(calc, "$(P):FLT2_ERR")
{
  field(INPA, "$(P):FLT2_STS")
  field(INPB, "$(P):FLT2_CTRL")
  field(INPC, "0")    # OK Value
  field(INPD, "1")    # Error Value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "1 second")
  field(PHAS, "1")
  field(DESC, "0 = OK 1 = Mismatch of STS and CTRL")
}

record(calc, "$(P):FLT3_ERR")
{
  field(INPA, "$(P):FLT3_STS")
  field(INPB, "$(P):FLT3_CTRL")
  field(INPC, "0")    # OK Value
  field(INPD, "1")    # Error Value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "1 second")
  field(PHAS, "1")
  field(DESC, "0 = OK 1 = Mismatch of STS and CTRL")
}

record(calc, "$(P):FLT4_ERR")
{
  field(INPA, "$(P):FLT4_STS")
  field(INPB, "$(P):FLT4_CTRL")
  field(INPC, "0")    # OK Value
  field(INPD, "1")    # Error Value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "1 second")
  field(PHAS, "1")
  field(DESC, "0 = OK 1 = Mismatch of STS and CTRL")
}
