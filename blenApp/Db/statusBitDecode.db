#==============================================================================
#
# Abs:  Status bit decode database file.
#
# Name: statusBitDecode.db
#
# Note: Must follow the LCLS naming conventions.
#
#==============================================================================

#
# Status (STS) values:
#  0 = OUT
#  1 = IN
#  2 = MOVING
#  3 = INCONSISTENT
#

#
# $(P0):SHT_STS -- status of shutter for AMC0
#
record(calc, "$(P0):SHT_STS")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x1")  # bit mask
  field(INPD, "0")    # shift
  field(CALC, "A&B&C?3:(((~(A|B))&C)?2:(A&C)>>D)")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OUT, 1=IN, 2=MOVING, 3=INCONSISTENT")
}

#
# $(P1):SHT_STS -- status of shutter for AMC1
#
record(calc, "$(P1):SHT_STS")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x2")  # bit mask
  field(INPD, "1")    # shift
  field(CALC, "A&B&C?3:(((~(A|B))&C)?2:(A&C)>>D)")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OUT, 1=IN, 2=MOVING, 3=INCONSISTENT")
}

#
# status of filter 1
#
record(calc, "$(P):FLT1_STS")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x4")  # bit mask
  field(INPD, "2")    # shift
  field(CALC, "A&B&C?3:(((~(A|B))&C)?2:(A&C)>>D)")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OUT, 1=IN, 2=MOVING, 3=INCONSISTENT")
}

#
# status of filter 2
#
record(calc, "$(P):FLT2_STS")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x8")  # bit mask
  field(INPD, "3")    # shift
  field(CALC, "A&B&C?3:(((~(A|B))&C)?2:(A&C)>>D)")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OUT, 1=IN, 2=MOVING, 3=INCONSISTENT")
}

#
# status of filter 3
#
record(calc, "$(P):FLT3_STS")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x10") # bit mask
  field(INPD, "4")    # shift
  field(CALC, "A&B&C?3:(((~(A|B))&C)?2:(A&C)>>D)")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OUT, 1=IN, 2=MOVING, 3=INCONSISTENT")
}

#
# status of filter 4
#
record(calc, "$(P):FLT4_STS")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x20") # bit mask
  field(INPD, "5")    # shift
  field(CALC, "A&B&C?3:(((~(A|B))&C)?2:(A&C)>>D)")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OUT, 1=IN, 2=MOVING, 3=INCONSISTENT")
}

#
# Control (CTRL) values:
#  0 = OUT
#  1 = IN
#

record(mbbo, "$(P0):SHT_CTRL")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P0):SHT_MOVE")
}

record(mbbo, "$(P1):SHT_CTRL")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P1):SHT_MOVE")
}

record(mbbo, "$(P):FLT1_CTRL")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):FLT1_MOVE")
}

record(mbbo, "$(P):FLT2_CTRL")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):FLT2_MOVE")
}

record(mbbo, "$(P):FLT3_CTRL")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):FLT3_MOVE")
}

record(mbbo, "$(P):FLT4_CTRL")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):FLT4_MOVE")
}

record(calcout, "$(P0):SHT_MOVE")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P0):SHT_CTRL")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x1")
  field(INPE, "0x3e")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P1):SHT_MOVE")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P1):SHT_CTRL")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x2")
  field(INPE, "0x3d")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):FLT1_MOVE")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):FLT1_CTRL")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x4")
  field(INPE, "0x3b")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):FLT2_MOVE")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):FLT2_CTRL")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x8")
  field(INPE, "0x37")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):FLT3_MOVE")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):FLT3_CTRL")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x10")
  field(INPE, "0x2f")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):FLT4_MOVE")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):FLT4_CTRL")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x20")
  field(INPE, "0x1f")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

#
# Error (ERR) values:
#  0 = OK
#  1 = Mismatch of CTRL and STS
#

#
# $(P0):SHT_ERR -- error state of shutter for AMC0
#
record(calc, "$(P0):SHT_ERR")
{
  field(INPA, "$(P0):SHT_STS")
  field(INPB, "$(P0):SHT_CTRL")
  field(INPC, "0")    # OK value
  field(INPD, "1")    # ERROR value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OK 1=Mismatch of CTRL and STS")
}

#
# $(P1):SHT_ERR -- error state of shutter for AMC1
#
record(calc, "$(P1):SHT_ERR")
{
  field(INPA, "$(P1):SHT_STS")
  field(INPB, "$(P1):SHT_CTRL")
  field(INPC, "0")    # OK value
  field(INPD, "1")    # ERROR value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OK 1=Mismatch of CTRL and STS")
}

#
# error state of filter 1
#
record(calc, "$(P):FLT1_ERR")
{
  field(INPA, "$(P):FLT1_STS")
  field(INPB, "$(P):FLT1_CTRL")
  field(INPC, "0")    # OK value
  field(INPD, "1")    # ERROR value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OK 1=Mismatch of CTRL and STS")
}

#
# error state of filter 2
#
record(calc, "$(P):FLT2_ERR")
{
  field(INPA, "$(P):FLT2_STS")
  field(INPB, "$(P):FLT2_CTRL")
  field(INPC, "0")    # OK value
  field(INPD, "1")    # ERROR value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OK 1=Mismatch of CTRL and STS")
}

#
# error state of filter 3
#
record(calc, "$(P):FLT3_ERR")
{
  field(INPA, "$(P):FLT3_STS")
  field(INPB, "$(P):FLT3_CTRL")
  field(INPC, "0")    # OK value
  field(INPD, "1")    # ERROR value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OK 1=Mismatch of CTRL and STS")
}

#
# error state of filter 4
#
record(calc, "$(P):FLT4_ERR")
{
  field(INPA, "$(P):FLT4_STS")
  field(INPB, "$(P):FLT4_CTRL")
  field(INPC, "0")    # OK value
  field(INPD, "1")    # ERROR value
  field(CALC, "(A = B) ? C : D")
  field(SCAN, "$(SCAN)")
  field(DESC, "0=OK 1=Mismatch of CTRL and STS")
}
