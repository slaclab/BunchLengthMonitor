#==============================================================================
#
# Abs:  Status bit decode database file.
#
# Name: statusBitDecode.db
#
# Note: Must follow the LCLS naming conventions.
#
#==============================================================================

#
# Status values:
#  0 = OUT
#  1 = IN
#  2 = MOVING
#

#
# $(P):$(STATUS)Shut1 -- status of shutter 1
#
record(calc, "$(P):$(STATUS)Shut1")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x1")  # bit mask
  field(INPD, "2")    # MOVING value
  field(CALC, "((~(A|B))&C) ? D : A&C")
  field(SCAN, "$(SCAN)")
  field(DESC, "Status: 0=OUT, 1=IN, 2=MOVING")
}

#
# $(P):$(STATUS)Shut2 -- status of shutter 2
#
record(calc, "$(P):$(STATUS)Shut2")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x2")  # bit mask
  field(INPD, "2")    # MOVING value
  field(INPE, "1")    # shift
  field(CALC, "((~(A|B))&C) ? D : (A&C) >> E")
  field(SCAN, "$(SCAN)")
  field(DESC, "Status: 0=OUT, 1=IN, 2=MOVING")
}

#
# $(P):$(STATUS)Filt1 -- status of filter 1
#
record(calc, "$(P):$(STATUS)Filt1")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x4")  # bit mask
  field(INPD, "2")    # MOVING value
  field(INPE, "2")    # shift
  field(CALC, "((~(A|B))&C) ? D : (A&C) >> E")
  field(SCAN, "$(SCAN)")
  field(DESC, "Status: 0=OUT, 1=IN, 2=MOVING")
}

#
# $(P):$(STATUS)Filt2 -- status of filter 2
#
record(calc, "$(P):$(STATUS)Filt2")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x8")  # bit mask
  field(INPD, "2")    # MOVING value
  field(INPE, "3")    # shift
  field(CALC, "((~(A|B))&C) ? D : (A&C) >> E")
  field(SCAN, "$(SCAN)")
  field(DESC, "Status: 0=OUT, 1=IN, 2=MOVING")
}

#
# $(P):$(STATUS)Filt3 -- status of filter 3
#
record(calc, "$(P):$(STATUS)Filt3")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x10") # bit mask
  field(INPD, "2")    # MOVING value
  field(INPE, "4")    # shift
  field(CALC, "((~(A|B))&C) ? D : (A&C) >> E")
  field(SCAN, "$(SCAN)")
  field(DESC, "Status: 0=OUT, 1=IN, 2=MOVING")
}

#
# $(P):$(STATUS)Filt4 -- status of filter 4
#
record(calc, "$(P):$(STATUS)Filt4")
{
  field(INPA, "$(P):$(INSERTED)")
  field(INPB, "$(P):$(REMOVED)")
  field(INPC, "0x20") # bit mask
  field(INPD, "2")    # MOVING value
  field(INPE, "5")    # shift
  field(CALC, "((~(A|B))&C) ? D : (A&C) >> E")
  field(SCAN, "$(SCAN)")
  field(DESC, "Status: 0=OUT, 1=IN, 2=MOVING")
}

#
# Choice values:
#  0 = OUT
#  1 = IN
#

record(mbbo, "$(P):ChoiceShut1")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):MoveShut1")
}

record(mbbo, "$(P):ChoiceShut2")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):MoveShut2")
}

record(mbbo, "$(P):ChoiceFilt1")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):MoveFilt1")
}

record(mbbo, "$(P):ChoiceFilt2")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):MoveFilt2")
}

record(mbbo, "$(P):ChoiceFilt3")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):MoveFilt3")
}

record(mbbo, "$(P):ChoiceFilt4")
{
  field(VAL, "0")
  field(ZRVL,"0")
  field(ZRST,"OUT")
  field(ONVL,"1")
  field(ONST,"IN")
  field(FLNK, "$(P):MoveFilt4")
}

record(calcout, "$(P):MoveShut1")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):ChoiceShut1")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x1")
  field(INPE, "0x3e")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):MoveShut2")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):ChoiceShut2")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x2")
  field(INPE, "0x3d")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):MoveFilt1")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):ChoiceFilt1")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x4")
  field(INPE, "0x3b")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):MoveFilt2")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):ChoiceFilt2")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x8")
  field(INPE, "0x37")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):MoveFilt3")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):ChoiceFilt3")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x10")
  field(INPE, "0x2f")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}

record(calcout, "$(P):MoveFilt4")
{
  field(OUT, "$(P):MoverOnOff PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(INPA, "$(P):ChoiceFilt4")
  field(INPB, "$(P):MoverOnOffRBV")
  field(INPC, "1")
  field(INPD, "0x20")
  field(INPE, "0x1f")
  field(CALC, "(A = C) ? B|D : B&E")
  field(SCAN, "Passive")
}
