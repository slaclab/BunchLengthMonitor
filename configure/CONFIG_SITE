# CONFIG_SITE
# Make any application-specific changes to the EPICS build
#   configuration variables in this file.
#
# Host/target specific settings can be specified in files named
#   CONFIG_SITE.$(EPICS_HOST_ARCH).Common
#   CONFIG_SITE.Common.$(T_A)
#   CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)
# CHECK_RELEASE controls the consistency checking of the support
#   applications pointed to by the RELEASE* files.
# Normally CHECK_RELEASE should be set to YES.
# Set CHECK_RELEASE to NO to disable checking completely.
# Set CHECK_RELEASE to WARN to perform consistency checking but
#   continue building anyway if conflicts are found.
CHECK_RELEASE = YES
# Set this when you only want to compile this application
#   for a subset of the cross-compiled target architectures
#   that Base is built for.
CROSS_COMPILER_TARGET_ARCHS = linuxRT-x86_64

# To install files into a location other than $(TOP) define
#   INSTALL_LOCATION here.
#INSTALL_LOCATION=</path/name/to/install/top>
# Set this when your IOC and the host use different paths
#   to access the application. This will be needed to boot
#   from a Microsoft FTP server or with some NFS mounts.
# You must rebuild in the iocBoot directory for this to
#   take effect.
#IOCS_APPL_TOP = </IOC/path/to/application/top>
#
# =======================================================
# Let's install our IOC boot products:
# envPaths and st.cmd
# =======================================================
INSTALL_LOCATION_STARTUP += $(INSTALL_LOCATION)/startup
DIRECTORY_TARGETS += $(INSTALL_LOCATION_STARTUP)
## =============================
## Build Application Statically
## =============================
SHARED_LIBRARIES    =NO
STATIC_BUILD        =YES
# Location of Linux Kernel Modules:
LINUX_KERNEL_MODULES=$(PACKAGE_SITE_TOP)/linuxKernel_Modules

LINUXRT_BUILDROOT_VERSION=buildroot-2019.08
LINUX_VERSION=rhel6


XZ_PACKAGE_NAME     =xz
XZ_VERSION          =5.2.2
XZ_TOP=$(PACKAGE_SITE_TOP)/$(XZ_PACKAGE_NAME)/$(XZ_VERSION)
XZ_LIB=$(XZ_TOP)/$(PKG_ARCH)/lib
XZ_INCLUDE = $(XZ_TOP)/$(PKG_ARCH)/include

ZLIB_PACKAGE_NAME   =zlib
ZLIB_VERSION        =1.2.8
ZLIB_TOP=$(PACKAGE_SITE_TOP)/$(ZLIB_PACKAGE_NAME)/$(ZLIB_VERSION)
ZLIB_LIB=$(ZLIB_TOP)/$(PKG_ARCH)/lib
ZLIB_INCLUDE = $(ZLIB_TOP)/$(PKG_ARCH)/include

#LIBXML2_PACKAGE_NAME    =libxml2
#LIBXML2_VERSION         =2.9.10
#LIBXML2_TOP=$(PACKAGE_SITE_TOP)/$(LIBXML2_PACKAGE_NAME)/$(LIBXML2_VERSION)
#LIBXML2_LIB =$(LIBXML2_TOP)/$(PKG_ARCH)/lib
#LIBXML2_INCLUDE = $(LIBXML2_TOP)/$(PKG_ARCH)/include/libxml2
# ======================================================================================================================
# Support for CPSW
# # ==========================================================================================================CPSW_DEVICE_LIBRARY_PACKAGE_NAME=cpsw/
CPSW_DEVICE_LIBRARY_PACKAGE_NAME    =cpsw/deviceLibrary
CPSW_DEVICE_LIBRARY_VERSION         =R1.2.0
CPSW_DEVICE_LIBRARY_TOP=$(PACKAGE_SITE_TOP)/$(CPSW_DEVICE_LIBRARY_PACKAGE_NAME)/$(CPSW_DEVICE_LIBRARY_VERSION)
CPSW_DEVICE_LIBRARY_LIB = $(CPSW_DEVICE_LIBRARY_TOP)/$(PKG_ARCH)/lib
CPSW_DEVICE_LIBRARY_INCLUDE = $(CPSW_DEVICE_LIBRARY_TOP)/$(PKG_ARCH)/include

CPSW_FRAMEWORK_PACKAGE_NAME     =cpsw/framework
CPSW_FRAMEWORK_VERSION          =R4.4.1
CPSW_FRAMEWORK_TOP=$(PACKAGE_SITE_TOP)/$(CPSW_FRAMEWORK_PACKAGE_NAME)/$(CPSW_FRAMEWORK_VERSION)
CPSW_FRAMEWORK_LIB = $(CPSW_FRAMEWORK_TOP)/$(PKG_ARCH)/lib
CPSW_FRAMEWORK_INCLUDE = $(CPSW_FRAMEWORK_TOP)/$(PKG_ARCH)/include

YAML_PACKAGE_NAME       =yaml-cpp
YAML_VERSION            =yaml-cpp-0.5.3_boost-1.64.0
YAML_TOP=$(PACKAGE_SITE_TOP)/$(YAML_PACKAGE_NAME)/$(YAML_VERSION)
YAML_LIB= $(YAML_TOP)/$(PKG_ARCH)/lib
YAML_INCLUDE=$(YAML_TOP)/$(PKG_ARCH)/include

YAMLREADER_PACKAGE_NAME     =cpsw/yamlReader
YAMLREADER_VERSION          =R1.2.0
YAMLREADER_TOP=$(PACKAGE_SITE_TOP)/$(YAMLREADER_PACKAGE_NAME)/$(YAMLREADER_VERSION)
YAMLREADER_LIB= $(YAMLREADER_TOP)/$(PKG_ARCH)/lib
YAMLREADER_INCLUDE=$(YAMLREADER_TOP)/$(PKG_ARCH)/include

BOOST_PACKAGE_NAME          =boost
BOOST_VERSION               =1.64.0
BOOST_TOP=$(PACKAGE_SITE_TOP)/$(BOOST_PACKAGE_NAME)/$(BOOST_VERSION)
BOOST_LIB = $(BOOST_TOP)/$(PKG_ARCH)/lib
BOOST_INCLUDE = $(BOOST_TOP)/$(PKG_ARCH)/include

# LCLS-II BSA API
BSA_PACKAGE_NAME            =timing/bsa
BSA_VERSION                 =R2.6.0
BSA_ARCH=$(LINUXRT_BUILDROOT_VERSION)-x86_64
BSA_TOP=$(PACKAGE_SITE_TOP)/$(BSA_PACKAGE_NAME)/$(BSA_VERSION)
BSA_LIB     = $(BSA_TOP)/$(PKG_ARCH)/lib
BSA_INCLUDE = $(BSA_TOP)/$(PKG_ARCH)/include

# C regular expression API
PCRE=YES
PCRE_PACKAGE_NAME           =pcre
PCRE_VERSION                =8.37
PCRE_TOP=$(PACKAGE_SITE_TOP)/$(PCRE_PACKAGE_NAME)/$(PCRE_VERSION)
PCRE_LIB=$(PCRE_TOP)/$(PKG_ARCH)/lib
PCRE_INCLUDE=$(PCRE_TOP)/$(PKG_ARCH)/include

# MPS API
L2MPS_PACKAGE_NAME          =l2Mps
L2MPS_VERSION               =R3.9.0
L2MPS_TOP=$(PACKAGE_SITE_TOP)/$(L2MPS_PACKAGE_NAME)/$(L2MPS_VERSION)
L2MPS_LIB=$(L2MPS_TOP)/$(PKG_ARCH)/lib
L2MPS_INCLUDE=$(L2MPS_TOP)/$(PKG_ARCH)/include

# Timing API
HPSTPR_PACKAGE_NAME         =timing/hpsTpr
HPSTPR_VERSION              =R2.5.0
HPSTPR_TOP=$(PACKAGE_SITE_TOP)/$(HPSTPR_PACKAGE_NAME)/$(HPSTPR_VERSION)
HPSTPR_LIB=$(HPSTPR_TOP)/$(PKG_ARCH)/lib
HPSTPR_INCLUDE=$(HPSTPR_TOP)/$(PKG_ARCH)/include

# commonATCA API
COMMONATCA_PACKAGE_NAME         =atca/commonATCA
COMMONATCA_VERSION              =R2.0.0
COMMONATCA_TOP=$(PACKAGE_SITE_TOP)/$(COMMONATCA_PACKAGE_NAME)/$(COMMONATCA_VERSION)
COMMONATCA_LIB=$(COMMONATCA_TOP)/$(PKG_ARCH)/lib
COMMONATCA_INCLUDE=$(COMMONATCA_TOP)/$(PKG_ARCH)/include
